---
title: "Land Prioritization"
author: "Maxwell Pepperdine"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Clear environment

```{r}
rm(list=ls())
```

## Load packages

```{r}
library(terra)
library(sf)
library(tidyverse)
library(tmap)
```

## Load data

```{r}
# Load Santa Cruz county parcels
sc_parcels <- st_read("~/Bren Courses/ESM 270p/data/raw_data/boundaries/sc_county_parcels/Assessor_Parcels.shp")

# Load San Mateo county parcels
sm_parcels1 <- st_read("~/Bren Courses/ESM 270p/data/raw_data/boundaries/sm_county_parcels/ACTIVE_PARCELS/SAN_MATEO_COUNTY_ACTIVE_PARCELS_APN.shp")
sm_parcels2 <- st_read("~/Bren Courses/ESM 270p/data/raw_data/boundaries/sm_county_parcels/ACTIVE_PARCELS/SAN_MATEO_COUNTY_ACTIVE_PARCELS_APN2.shp")

# Load Santa Clara County parcels
sccl_parcels <- st_read("~/Bren Courses/ESM 270p/data/raw_data/boundaries/sccl_county_parcels/Parcels/geo_export_fb15c047-6a84-4c36-91f2-8ea3aff8d09f.shp")

# Load the SCM region boundary
scm_boundary <- st_read("~/Bren Courses/ESM 270p/data/raw_data/boundaries/scm_region/scm_region_boundary.shp")
```

## County parcel wrangling

#### Check the CRS of the county parcels

```{r}
crs(sc_parcels)
crs(sm_parcels1)
crs(sm_parcels2)
crs(sccl_parcels)
crs(scm_boundary)

# project the sccl_parcels to the same CRS as sc
sccl_parcels <- st_transform(sccl_parcels, 
                             crs(sc_parcels))

# project the scm_boundary to the same CRS as sc
scm_boundary <- st_transform(scm_boundary, 
                             crs(sc_parcels))

if(crs(sc_parcels) == crs(sm_parcels1) & 
   crs(sm_parcels1) == crs(sm_parcels2) & 
   crs(sm_parcels2) == crs(sccl_parcels) & 
   crs(scm_boundary) == crs(sc_parcels)){
  print("Success: All county parcels have the same CRS")
} else {
  warning("Error: Not all county parcels have the same CRS")
}
```

#### Combine San Mateo parcels

```{r}
# combine the two separate SM county parcels
sm_parcels <- rbind(sm_parcels1, sm_parcels2)

# make sure this worked
if(nrow(sm_parcels) == nrow(sm_parcels1) + nrow(sm_parcels2)){
  print("Success: San Mateo parcels combined")
} else {
  warning("Error: San Mateo parcels not combined")
}
```

#### Combine all county parcels

```{r}
# make sure the sc and sccl parcels have same columns as sm
sc_parcels <- sc_parcels %>% 
  select(APNNODASH) %>% 
  # add a column called "OBJECTID" that starts and 1000000 and increments by 1
  mutate(OBJECTID = 1000000 + row_number()) %>% 
  # move the column before geometry 
  relocate(OBJECTID, .before = geometry) %>% 
  # rename to match sm parcels
  rename(APN = APNNODASH)

sccl_parcels <- sccl_parcels %>% 
  select(apn, objectid) %>% 
  rename(APN = apn) %>% 
  rename(OBJECTID = objectid)

# combine all parcels
all_parcels <- rbind(sc_parcels, sm_parcels, sccl_parcels)
```

```{r}
# make sure this worked
if(nrow(all_parcels) == 
   nrow(sc_parcels) + nrow(sm_parcels) + nrow(sccl_parcels)){
  print("Success: All county parcels combined!")
} else {
  warning("Error: All county parcels not combined")
}
```

#### Crop to the SCM region boundary

```{r}
# crop to the scm boundary
scm_parcels <- st_intersection(all_parcels, 
                               scm_boundary)
```

```{r}
# make sure this worked
# write a QC using st_touches()
if(all(st_touches(scm_parcels, scm_boundary))){
  print("Success: Parcels cropped to SCM boundary")
} else {
  warning("Error: Parcels not cropped to SCM boundary")
}
```

```{r}
# save the scm parcels
scm_parcels_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/data/raw_data/boundaries/scm_region_parcels/scm_region_parcels.shp"
st_write(scm_parcels, 
         scm_parcels_path)
```

## Land prioritization

#### Load data

```{r}
# Load the pre-fire sdm
pre_fire_sdm <- rast("~/Bren Courses/ESM 270p/outputs/wallace_outputs/pre-fire/2024_11_18_fc_LQH_rm1/map_predictions/sdm_prefire_fc_LQH_rm1_res45ft.tif")

# Load the post-fire transferred sdm
post_fire_sdm <- rast("~/Bren Courses/ESM 270p/outputs/wallace_outputs/post-fire/2024_11_17_fc_LQH_rm1_transfer/map_predictions/sdm_postfire_fc_LQH_rm1_transfer.tif")

# Load scm county parcels as an sf object
scm_parcels <- st_read("C:/Users/maxpe/Documents/Bren Courses/ESM 270p/data/raw_data/boundaries/scm_region_parcels/scm_region_parcels.shp")
```

#### Reclassify the SDMs to create habitat suitability maps

```{r}
# make a matrix that identifies the reclassification values
# probability of occurrence >= 0.7 = 1 (suitable habitat)
# probability of occurrence < 0.7 = 0 (unsuitable habitat)

# define the reclassification matrix
rcl <- matrix(c(0, 0.7, 0, # group 0 ranges from 0 to 0.7
                0.7, 1, 1), # group 1 ranges from 0.7 to 1
              ncol = 3, 
              byrow = TRUE)


# reclassify the pre-fire sdm
pre_fire_reclass <- classify(pre_fire_sdm, 
                                 rcl = rcl)
plot(pre_fire_reclass)


# reclassify the post-fire sdm
post_fire_reclass <- classify(post_fire_sdm, 
                                 rcl = rcl)
plot(post_fire_reclass)


# turn the post-fire sdm into a polygon
post_fire_reclass_polygon <- as.polygons(post_fire_reclass)


# save the reclassified SDMs
pre_fire_reclass_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/pre_fire/pre_fire_habitat_suitability.tif"
writeRaster(pre_fire_reclass, 
            pre_fire_reclass_path, overwrite = TRUE)

post_fire_reclass_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/post_fire/post_fire_habitat_suitability.tif"
writeRaster(post_fire_reclass, 
            post_fire_reclass_path, overwrite = TRUE)
post_fire_reclass_polygon_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/post_fire/post_fire_habitat_suitability.shp"
writeVector(post_fire_reclass_polygon, 
            post_fire_reclass_polygon_path, overwrite = TRUE)
```

#### Calculate the change in habitat suitability

If we subtract the pre-fire habitat suitability from the post-fire habitat suitability, we can calculate the change in habitat suitability. This will give us an idea of how the habitat suitability has changed due to the fire. Positive values represent an increase in habitat suitability, while negative values represent a decrease in habitat suitability.

```{r}
# calculate the change in habitat suitability
diff_hab_suit <- post_fire_reclass - pre_fire_reclass
plot(diff_hab_suit)

# convert to a vector 
diff_hab_suit_polygon <- as.polygons(diff_hab_suit)

## save the change in habitat suitability
# as a raster
diff_hab_suit_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/difference/post-pre_hab_suit_diff.tif"
writeRaster(diff_hab_suit, 
            diff_hab_suit_path, overwrite = TRUE)

# as a shapefile
diff_hab_suit_polygon_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/difference/post-pre_hab_suit_diff.shp"
writeVector(diff_hab_suit_polygon, 
            diff_hab_suit_polygon_path, overwrite = TRUE)
```

#### Calculate suitable habitat area in each county parcel post-fire

Load the canopy height model to project the post-fire raster and county parcels to the same CRS.

```{r}
# CHM
chm_file_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/data/new_data/wallace_env_data/scm_chm_45ft.tif"
scm_chm_45ft <- rast(chm_file_path)
crs(scm_chm_45ft)

# post-fire reclassified raster
post_fire_reclass_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/post_fire/post_fire_habitat_suitability.tif"
post_fire_reclass <- rast(post_fire_reclass_path)


# SCM county parcels
scm_parcels_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/data/raw_data/boundaries/scm_region_parcels/scm_region_parcels.shp"
scm_parcels <- st_read(scm_parcels_path)
```

Project the SCM parcels & post-fire habitat suitability raster to the same CRS as the canopy height model.

```{r}
# project the post-fire raster & county parcels to NAD 83 CA Zone III
post_fire_reclass <- project(post_fire_reclass, 
                             crs(scm_chm_45ft))
scm_parcels <- st_transform(scm_parcels, 
                            crs(scm_chm_45ft))
scm_parcels_sv <- vect(scm_parcels)

# QC make sure this worked
crs(post_fire_reclass) == crs(scm_chm_45ft) & 
  crs(scm_parcels_sv) == crs(scm_chm_45ft)


# # calculate the area of suitable habitat from the post-fire model in each parcel
# suitable_habitat_area <- zonal(post_fire_reclass, 
#                                scm_parcels_sv, 
#                                fun = "sum")

# extract habitat suitability values for each parcel
suitability_values <- terra::extract(post_fire_reclass, 
                                     scm_parcels_sv, 
                                     exact = TRUE, 
                                     weights = TRUE)

# Compute the area of suitable habitat (value = 1) for each parcel
scm_parcels_sv$area_suitable <- sapply(1:nrow(scm_parcels_sv), function(i) {
  # Filter extracted values for the current parcel
  parcel_values <- suitability_values[suitability_values$ID == i, ]
  
  # Calculate area for cells with value = 1, weighted by overlap
  sum(parcel_values$value == 1, na.rm = TRUE) * 
    parcel_values$weight * 
    res(post_fire_reclass)[1] * res(post_fire_reclass)[2]
})


# Sort parcels by area_suitable in descending order
top_10_parcels <- scm_parcels_sv[order(-scm_parcels_sv$area_suitable), ][1:10, ]

# Inspect the results
top_10_parcels

# save the suitable habitat area
suitable_habitat_area_path <- "C:/Users/maxpe/Documents/Bren Courses/ESM 270p/outputs/data/habitat_suitability/post_fire/suitable_habitat_area_parcels.shp"
writeVector(scm_parcels_sv, 
            suitable_habitat_area_path)
```



















